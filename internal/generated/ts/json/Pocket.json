{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/Pocket",
    "definitions": {
        "Pocket": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "goals": {
                    "items": {
                        "$ref": "#/definitions/api.v1.SmartGoal"
                    },
                    "type": "array",
                    "description": "the set of smart goals this user witholds"
                },
                "type": {
                    "enum": [
                        "POCKET_TYPE_UNSPECIFIED",
                        0,
                        "POCKET_TYPE_DISCRETIONARY_SPENDING",
                        1,
                        "POCKET_TYPE_FUN_MONEY",
                        2,
                        "POCKET_TYPE_DEBT_REDUCTION",
                        3,
                        "POCKET_TYPE_EMERGENCY_FUND",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Pocket Type"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Pocket",
            "description": "Pocket is an abstraction of a over a bank account. A user can has at most 4 pockets per connected account NOTE: these pockets are automatically created by the system and should not be exposed for mutation by any client. The only operations that can be performed against a pocket are: 1. Get the pocket 2. Get the pocket's smart goals 3. Adding a smart goal to the pocket"
        },
        "api.v1.Budget": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the budget"
                },
                "description": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "description": "the time the goal was created"
                },
                "end_date": {
                    "type": "string",
                    "description": "the time the goal was updated"
                },
                "category": {
                    "$ref": "#/definitions/api.v1.Category",
                    "additionalProperties": true,
                    "description": "category associated with the goal"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Budget",
            "description": "The Budgets table stores information about each budget created by the user, including the name of the budget, the start and end dates, and the user ID."
        },
        "api.v1.Category": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the category"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the category"
                },
                "subcategories": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "the sub categories of the category"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Category",
            "description": "The Categories table stores information about the different categories of expenses or income, such as \"Housing\", \"Food\", \"Transportation\", and \"Entertainment\". Each category has one or more subcategories, which are stored in the Subcategories table. For example, the \"Housing\" category might have subcategories for \"Rent\", \"Utilities\", and \"Home Maintenance\"."
        },
        "api.v1.Forecast": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "forecasted_amount": {
                    "type": "string",
                    "description": "the forecasted amount of the goal"
                },
                "forecasted_completion_date": {
                    "type": "string",
                    "description": "the forecasted completion date of the goal"
                },
                "variance_amount": {
                    "type": "string",
                    "description": "the forecasted variance of the goal between the forecasted and target amounts"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Forecast",
            "description": "The Forecast table stores information about each forecast generated for a particular goal, including the forecast date, the forecasted amount of money saved or invested for the goal by the target date, and the variance between the forecasted and target amounts. This allows the user to track how well they are progressing towards their goal and make adjustments as needed."
        },
        "api.v1.Milestone": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the milestone Validations: - must be at least 3 characters long"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the miletone Validations: - must be at least 3 characters long"
                },
                "target_date": {
                    "type": "string",
                    "description": "the target date of the milestone Validations: - must be at least 3 characters long"
                },
                "target_amount": {
                    "type": "string",
                    "description": "the target amount of the milestone"
                },
                "is_completed": {
                    "type": "boolean",
                    "description": "wethe milestone is completed or not"
                },
                "budget": {
                    "items": {
                        "$ref": "#/definitions/api.v1.Budget"
                    },
                    "type": "array",
                    "description": "the budget associated with the milestone"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Milestone",
            "description": "Milestone: represents a milestone in the context of simfinni. A financial milestone that is both smart and achievable. A milestone is a sub goal of a goal and is tied to a goal by the goal id"
        },
        "api.v1.SmartGoal": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "user_id": {
                    "type": "string",
                    "description": "the user id to which this goal is tied to"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the goal Validations: - must be at least 3 characters long"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the goal Validations: - must be at least 3 characters long"
                },
                "is_completed": {
                    "type": "boolean",
                    "description": "wether the goal has been achieved or not"
                },
                "goal_type": {
                    "enum": [
                        "GOAL_TYPE_UNSPECIFIED",
                        0,
                        "GOAL_TYPE_SAVINGS",
                        1,
                        "GOAL_TYPE_INVESTMENT",
                        2,
                        "GOAL_TYPE_DEBT",
                        3,
                        "GOAL_TYPE_EXPENSE",
                        4
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Goal Type"
                },
                "duration": {
                    "type": "string",
                    "description": "The duration of the goal"
                },
                "start_date": {
                    "type": "string",
                    "description": "the start date of the goal"
                },
                "end_date": {
                    "type": "string",
                    "description": "the end date of the goal"
                },
                "target_amount": {
                    "type": "string",
                    "description": "the target amount of the goal amount of money the user wants to save or invest"
                },
                "current_amount": {
                    "type": "string",
                    "description": "the current amount of the goal current amount of money saved or invested towards the goal"
                },
                "milestones": {
                    "items": {
                        "$ref": "#/definitions/api.v1.Milestone"
                    },
                    "type": "array",
                    "description": "Milestones associated with the goal"
                },
                "forecasts": {
                    "$ref": "#/definitions/api.v1.Forecast",
                    "additionalProperties": true,
                    "description": "Forecasts associated with the goal"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Smart Goal",
            "description": "SmartGoal: The Goals table stores information about each financial goal, including the name of the goal, its description, the target amount of money the user wants to save or invest, and the expected date of completion. The Goals table also includes columns for the start date of the goal, the current amount of money saved or invested towards the goal, and a boolean flag indicating whether the goal has been achieved. These additional columns allow the user to track their progress towards the goal and see how much more they need to save or invest to reach their target amount."
        }
    }
}