name: chart-release

on:
  pull_request:


permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access

env:
  KUBERNETES_VERSION: 1.28.0

jobs:
  publish-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fluxcd/flux2/action@main
      - uses: sigstore/cosign-installer@main
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.3
      - name: Setup kubeconform
        uses: ./.github/actions/kubeconform
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v${{ env.KUBERNETES_VERSION }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: feelguuds
          password: Granada123!
      - name: Prepare
        id: prep
        run: |
          HELM_VERSION=$(grep 'version:' ./charts/financial-integration-service/Chart.yaml | tail -n1 | awk '{ print $2}')
          VERSION=sha-${GITHUB_SHA::8}
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "REVISION=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "HELM_VERSION=${HELM_VERSION}" >> $GITHUB_OUTPUT
      - name: Validate Service Helm Chart
        run: |
          helm lint ./charts/financial-integration-service
          helm template ./charts/financial-integration-service | kubeconform -strict -summary -kubernetes-version ${{ env.KUBERNETES_VERSION }}
        continue-on-error: true
      - name: Publish Helm chart to GHCR
        run: |
          HELM_EXPERIMENTAL_OCI=1
          helm package charts/financial-integration-service --version ${{ steps.prep.outputs.HELM_VERSION }}
          helm push financial-integration-service-${{ steps.prep.outputs.HELM_VERSION }}.tgz oci://ghcr.io/simifiniicto/charts
          rm financial-integration-service-${{ steps.prep.outputs.HELM_VERSION }}.tgz
        continue-on-error: true
      - name: Publish Service Helm Chart
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: ./charts
          target_dir: ./financial-integration-service
          commit_username: yoanyombapro1234
          commit_email: yoanyombapro@gmail.com
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/feelguuds/financial-integration-service
          tags: |
            type=raw,value=${{ steps.prep.outputs.VERSION }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
            type=raw,value=staging,enable=${{ github.ref == format('refs/heads/{0}', 'release') }}
      - name: Publish Multi-Arch Image Financail AI Service
        uses: docker/build-push-action@v2
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            REVISION=${{ steps.prep.outputs.REVISION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Debug failure
        if: failure()
        run: |
          kubectl logs -l app=financial-integration-service || true